apiVersion: v1
kind: Namespace
metadata:
  name: konga
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pgadmin
  namespace: konga
  labels:
    app: pgadmin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pgadmin
  template:
    metadata:
      labels:
        app: pgadmin
    spec:
      containers:
        - name: pgadmin
          image: dpage/pgadmin4 
          env:
          - name: PGADMIN_DEFAULT_EMAIL
            value: test@test.com
          - name: PGADMIN_DEFAULT_PASSWORD
            value: test123
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 80
              name: http
              protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: pgadmin
  namespace: konga
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: pgadmin
  type: ClusterIP
---
kind: Ingress
apiVersion: networking.k8s.io/v1beta1
metadata:
  annotations:
  name: pgadmin
  namespace: konga
spec:
  rules:
  - host: pgadmin.testdomain.com.br
    http:
      paths:
      - backend:
          serviceName: pgadmin
          servicePort: 80
        path: /
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  namespace: konga
  labels:
    app: postgres
data:
  POSTGRES_DB: konga
  POSTGRES_USER: konga
  POSTGRES_PASSWORD: konga
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: konga
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:9.6
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 5432
          envFrom:
            - configMapRef:
                name: postgres-config
          volumeMounts:
            - mountPath: "/var/lib/postgresql/data"
              name: "postgres"
      volumes:
        - hostPath:
            path: "/home/docker/pgdata"
          name: postgres
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: konga
spec:
  ports:
  - name: pgql
    port: 5432
    protocol: TCP
    targetPort: 5432
  selector:
    app: postgres
---
apiVersion: v1
kind: Secret
metadata:
  name: kongcreds
  namespace: konga
type: Opaque
data:
  username: a29uZ2E=
  password: a29uZ2E=
  
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: konga
  namespace: konga
spec:
  replicas: 1
  selector:
    matchLabels:
      app: konga
  template:
    metadata:
      labels:
        name: konga
        app: konga
    spec:
      containers:
      - name: konga
        image: pantsel/konga
        env:
        - name: NODE_ENV
          value: development
        - name: DB_ADAPTER
          value: postgres
        - name: DB_HOST
          value: postgres
        - name: DB_PORT
          value: '5432'
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: kongcreds
              key: username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: kongcreds
              key: password
        - name: DB_DATABASE
          value: konga
        - name: DB_PG_SCHEMA
          value: konga
        ports:
        - containerPort: 1337
          protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: konga
  name: konga
  namespace: konga
spec:
  ports:
    - protocol: TCP
      port: 80
      targetPort: 1337
  selector:
    app: konga
---
kind: Ingress
apiVersion: extensions/v1beta1
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
  name: konga
  namespace: konga
spec:
  rules:
  - host: konga.testdomain.com.br
    http:
      paths:
      - backend:
          serviceName: konga
          servicePort: 80
        path: /